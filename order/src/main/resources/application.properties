
server.port=8087
spring.application.name=order-service

# 데이터베이스 연결
spring.datasource.url=jdbc:h2:tcp://localhost:9099/~/order
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true


# Eureka Client 설정
eureka.instance.instance-id= ${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry= true
eureka.client.service-url.defaultZone= http://localhost:9000/eureka


# kafka 설정
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#feign Hystrix 설정
feign.hystrix.enabled=true
